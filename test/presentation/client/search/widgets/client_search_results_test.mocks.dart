// Mocks generated by Mockito 5.3.2 from annotations
// in appointment/test/presentation/client/search/widgets/client_search_results_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:appointment/application/client/search/bloc/client_search_bloc.dart'
    as _i2;
import 'package:appointment/domain/common/common_values.dart' as _i10;
import 'package:appointment/infrastructure/client/client_dao.dart' as _i9;
import 'package:appointment/infrastructure/client/client_table.dart' as _i3;
import 'package:appointment/infrastructure/core/select_filter.dart' as _i11;
import 'package:appointment/infrastructure/drift/db.dart' as _i4;
import 'package:bloc/bloc.dart' as _i8;
import 'package:drift/drift.dart' as _i5;
import 'package:drift/src/runtime/executor/stream_queries.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeClientSearchState_0 extends _i1.SmartFake
    implements _i2.ClientSearchState {
  _FakeClientSearchState_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeClientModels_1 extends _i1.SmartFake implements _i3.ClientModels {
  _FakeClientModels_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDriftDb_2 extends _i1.SmartFake implements _i4.DriftDb {
  _FakeDriftDb_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabaseConnection_3 extends _i1.SmartFake
    implements _i5.DatabaseConnection {
  _FakeDatabaseConnection_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDriftDatabaseOptions_4 extends _i1.SmartFake
    implements _i5.DriftDatabaseOptions {
  _FakeDriftDatabaseOptions_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQueryExecutor_5 extends _i1.SmartFake implements _i5.QueryExecutor {
  _FakeQueryExecutor_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamQueryStore_6 extends _i1.SmartFake
    implements _i6.StreamQueryStore {
  _FakeStreamQueryStore_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabaseConnectionUser_7 extends _i1.SmartFake
    implements _i5.DatabaseConnectionUser {
  _FakeDatabaseConnectionUser_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$ClientModelsTable_8 extends _i1.SmartFake
    implements _i4.$ClientModelsTable {
  _Fake$ClientModelsTable_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeClientModel_9 extends _i1.SmartFake implements _i4.ClientModel {
  _FakeClientModel_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInsertStatement_10<T extends _i5.Table, D> extends _i1.SmartFake
    implements _i5.InsertStatement<T, D> {
  _FakeInsertStatement_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdateStatement_11<T extends _i5.Table, D> extends _i1.SmartFake
    implements _i5.UpdateStatement<T, D> {
  _FakeUpdateStatement_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSimpleSelectStatement_12<T extends _i5.HasResultSet, D>
    extends _i1.SmartFake implements _i5.SimpleSelectStatement<T, D> {
  _FakeSimpleSelectStatement_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeJoinedSelectStatement_13<FirstT extends _i5.HasResultSet, FirstD>
    extends _i1.SmartFake implements _i5.JoinedSelectStatement<FirstT, FirstD> {
  _FakeJoinedSelectStatement_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDeleteStatement_14<T extends _i5.Table, D> extends _i1.SmartFake
    implements _i5.DeleteStatement<T, D> {
  _FakeDeleteStatement_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSelectable_15<T> extends _i1.SmartFake implements _i5.Selectable<T> {
  _FakeSelectable_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGenerationContext_16 extends _i1.SmartFake
    implements _i5.GenerationContext {
  _FakeGenerationContext_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ClientSearchBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockClientSearchBloc extends _i1.Mock implements _i2.ClientSearchBloc {
  @override
  _i2.ClientSearchState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeClientSearchState_0(
          this,
          Invocation.getter(#state),
        ),
        returnValueForMissingStub: _FakeClientSearchState_0(
          this,
          Invocation.getter(#state),
        ),
      ) as _i2.ClientSearchState);
  @override
  _i7.Stream<_i2.ClientSearchState> get stream => (super.noSuchMethod(
        Invocation.getter(#stream),
        returnValue: _i7.Stream<_i2.ClientSearchState>.empty(),
        returnValueForMissingStub: _i7.Stream<_i2.ClientSearchState>.empty(),
      ) as _i7.Stream<_i2.ClientSearchState>);
  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  void add(_i2.ClientSearchEvent? event) => super.noSuchMethod(
        Invocation.method(
          #add,
          [event],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onEvent(_i2.ClientSearchEvent? event) => super.noSuchMethod(
        Invocation.method(
          #onEvent,
          [event],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void emit(_i2.ClientSearchState? state) => super.noSuchMethod(
        Invocation.method(
          #emit,
          [state],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void on<E extends _i2.ClientSearchEvent>(
    _i8.EventHandler<E, _i2.ClientSearchState>? handler, {
    _i8.EventTransformer<E>? transformer,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #on,
          [handler],
          {#transformer: transformer},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onTransition(
          _i8.Transition<_i2.ClientSearchEvent, _i2.ClientSearchState>?
              transition) =>
      super.noSuchMethod(
        Invocation.method(
          #onTransition,
          [transition],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  void onChange(_i8.Change<_i2.ClientSearchState>? change) =>
      super.noSuchMethod(
        Invocation.method(
          #onChange,
          [change],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addError(
    Object? error, [
    StackTrace? stackTrace,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #addError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void onError(
    Object? error,
    StackTrace? stackTrace,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            error,
            stackTrace,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ClientDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockClientDao extends _i1.Mock implements _i9.ClientDao {
  @override
  _i3.ClientModels get table => (super.noSuchMethod(
        Invocation.getter(#table),
        returnValue: _FakeClientModels_1(
          this,
          Invocation.getter(#table),
        ),
        returnValueForMissingStub: _FakeClientModels_1(
          this,
          Invocation.getter(#table),
        ),
      ) as _i3.ClientModels);
  @override
  _i4.DriftDb get attachedDatabase => (super.noSuchMethod(
        Invocation.getter(#attachedDatabase),
        returnValue: _FakeDriftDb_2(
          this,
          Invocation.getter(#attachedDatabase),
        ),
        returnValueForMissingStub: _FakeDriftDb_2(
          this,
          Invocation.getter(#attachedDatabase),
        ),
      ) as _i4.DriftDb);
  @override
  _i5.DatabaseConnection get connection => (super.noSuchMethod(
        Invocation.getter(#connection),
        returnValue: _FakeDatabaseConnection_3(
          this,
          Invocation.getter(#connection),
        ),
        returnValueForMissingStub: _FakeDatabaseConnection_3(
          this,
          Invocation.getter(#connection),
        ),
      ) as _i5.DatabaseConnection);
  @override
  _i5.DriftDatabaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeDriftDatabaseOptions_4(
          this,
          Invocation.getter(#options),
        ),
        returnValueForMissingStub: _FakeDriftDatabaseOptions_4(
          this,
          Invocation.getter(#options),
        ),
      ) as _i5.DriftDatabaseOptions);
  @override
  _i5.QueryExecutor get executor => (super.noSuchMethod(
        Invocation.getter(#executor),
        returnValue: _FakeQueryExecutor_5(
          this,
          Invocation.getter(#executor),
        ),
        returnValueForMissingStub: _FakeQueryExecutor_5(
          this,
          Invocation.getter(#executor),
        ),
      ) as _i5.QueryExecutor);
  @override
  _i6.StreamQueryStore get streamQueries => (super.noSuchMethod(
        Invocation.getter(#streamQueries),
        returnValue: _FakeStreamQueryStore_6(
          this,
          Invocation.getter(#streamQueries),
        ),
        returnValueForMissingStub: _FakeStreamQueryStore_6(
          this,
          Invocation.getter(#streamQueries),
        ),
      ) as _i6.StreamQueryStore);
  @override
  _i5.DatabaseConnectionUser get resolvedEngine => (super.noSuchMethod(
        Invocation.getter(#resolvedEngine),
        returnValue: _FakeDatabaseConnectionUser_7(
          this,
          Invocation.getter(#resolvedEngine),
        ),
        returnValueForMissingStub: _FakeDatabaseConnectionUser_7(
          this,
          Invocation.getter(#resolvedEngine),
        ),
      ) as _i5.DatabaseConnectionUser);
  @override
  _i4.$ClientModelsTable get clientModels => (super.noSuchMethod(
        Invocation.getter(#clientModels),
        returnValue: _Fake$ClientModelsTable_8(
          this,
          Invocation.getter(#clientModels),
        ),
        returnValueForMissingStub: _Fake$ClientModelsTable_8(
          this,
          Invocation.getter(#clientModels),
        ),
      ) as _i4.$ClientModelsTable);
  @override
  _i7.Future<int> insert(_i5.Insertable<_i4.ClientModel>? model) =>
      (super.noSuchMethod(
        Invocation.method(
          #insert,
          [model],
        ),
        returnValue: _i7.Future<int>.value(0),
        returnValueForMissingStub: _i7.Future<int>.value(0),
      ) as _i7.Future<int>);
  @override
  _i7.Future<_i4.ClientModel> getById(_i10.Uid? uid) => (super.noSuchMethod(
        Invocation.method(
          #getById,
          [uid],
        ),
        returnValue: _i7.Future<_i4.ClientModel>.value(_FakeClientModel_9(
          this,
          Invocation.method(
            #getById,
            [uid],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i4.ClientModel>.value(_FakeClientModel_9(
          this,
          Invocation.method(
            #getById,
            [uid],
          ),
        )),
      ) as _i7.Future<_i4.ClientModel>);
  @override
  _i7.Future<Iterable<_i4.ClientModel>> getPage({
    required int? limit,
    required int? offset,
    _i11.SelectFilter<_i3.ClientModels, _i4.ClientModel>? filter,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPage,
          [],
          {
            #limit: limit,
            #offset: offset,
            #filter: filter,
          },
        ),
        returnValue:
            _i7.Future<Iterable<_i4.ClientModel>>.value(<_i4.ClientModel>[]),
        returnValueForMissingStub:
            _i7.Future<Iterable<_i4.ClientModel>>.value(<_i4.ClientModel>[]),
      ) as _i7.Future<Iterable<_i4.ClientModel>>);
  @override
  _i7.Future<bool> save(
    _i10.Uid? uid,
    _i5.Insertable<_i4.ClientModel>? model,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #save,
          [
            uid,
            model,
          ],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
  @override
  _i7.Future<bool> remove(_i10.Uid? uid) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [uid],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);
  @override
  _i7.Stream<List<Map<String, Object?>>> createStream(
          _i6.QueryStreamFetcher? stmt) =>
      (super.noSuchMethod(
        Invocation.method(
          #createStream,
          [stmt],
        ),
        returnValue: _i7.Stream<List<Map<String, Object?>>>.empty(),
        returnValueForMissingStub:
            _i7.Stream<List<Map<String, Object?>>>.empty(),
      ) as _i7.Stream<List<Map<String, Object?>>>);
  @override
  T alias<T extends _i5.Table, D>(
    _i5.TableInfo<T, D>? table,
    String? alias,
  ) =>
      throw UnsupportedError(
          '\'alias\' cannot be used without a mockito fallback generator.');
  @override
  void markTablesUpdated(Iterable<_i5.TableInfo<_i5.Table, dynamic>>? tables) =>
      super.noSuchMethod(
        Invocation.method(
          #markTablesUpdated,
          [tables],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyUpdates(Set<_i5.TableUpdate>? updates) => super.noSuchMethod(
        Invocation.method(
          #notifyUpdates,
          [updates],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.Stream<Set<_i5.TableUpdate>> tableUpdates(
          [_i5.TableUpdateQuery? query = const _i5.TableUpdateQuery.any()]) =>
      (super.noSuchMethod(
        Invocation.method(
          #tableUpdates,
          [query],
        ),
        returnValue: _i7.Stream<Set<_i5.TableUpdate>>.empty(),
        returnValueForMissingStub: _i7.Stream<Set<_i5.TableUpdate>>.empty(),
      ) as _i7.Stream<Set<_i5.TableUpdate>>);
  @override
  _i7.Future<T> doWhenOpened<T>(
          _i7.FutureOr<T> Function(_i5.QueryExecutor)? fn) =>
      (super.noSuchMethod(
        Invocation.method(
          #doWhenOpened,
          [fn],
        ),
        returnValue: _i7.Future<T>.value(null),
        returnValueForMissingStub: _i7.Future<T>.value(null),
      ) as _i7.Future<T>);
  @override
  _i5.InsertStatement<T, D> into<T extends _i5.Table, D>(
          _i5.TableInfo<T, D>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #into,
          [table],
        ),
        returnValue: _FakeInsertStatement_10<T, D>(
          this,
          Invocation.method(
            #into,
            [table],
          ),
        ),
        returnValueForMissingStub: _FakeInsertStatement_10<T, D>(
          this,
          Invocation.method(
            #into,
            [table],
          ),
        ),
      ) as _i5.InsertStatement<T, D>);
  @override
  _i5.UpdateStatement<Tbl, R> update<Tbl extends _i5.Table, R>(
          _i5.TableInfo<Tbl, R>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [table],
        ),
        returnValue: _FakeUpdateStatement_11<Tbl, R>(
          this,
          Invocation.method(
            #update,
            [table],
          ),
        ),
        returnValueForMissingStub: _FakeUpdateStatement_11<Tbl, R>(
          this,
          Invocation.method(
            #update,
            [table],
          ),
        ),
      ) as _i5.UpdateStatement<Tbl, R>);
  @override
  _i5.SimpleSelectStatement<T, R> select<T extends _i5.HasResultSet, R>(
    _i5.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #select,
          [table],
          {#distinct: distinct},
        ),
        returnValue: _FakeSimpleSelectStatement_12<T, R>(
          this,
          Invocation.method(
            #select,
            [table],
            {#distinct: distinct},
          ),
        ),
        returnValueForMissingStub: _FakeSimpleSelectStatement_12<T, R>(
          this,
          Invocation.method(
            #select,
            [table],
            {#distinct: distinct},
          ),
        ),
      ) as _i5.SimpleSelectStatement<T, R>);
  @override
  _i5.JoinedSelectStatement<T, R> selectOnly<T extends _i5.HasResultSet, R>(
    _i5.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #selectOnly,
          [table],
          {#distinct: distinct},
        ),
        returnValue: _FakeJoinedSelectStatement_13<T, R>(
          this,
          Invocation.method(
            #selectOnly,
            [table],
            {#distinct: distinct},
          ),
        ),
        returnValueForMissingStub: _FakeJoinedSelectStatement_13<T, R>(
          this,
          Invocation.method(
            #selectOnly,
            [table],
            {#distinct: distinct},
          ),
        ),
      ) as _i5.JoinedSelectStatement<T, R>);
  @override
  _i5.DeleteStatement<T, D> delete<T extends _i5.Table, D>(
          _i5.TableInfo<T, D>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [table],
        ),
        returnValue: _FakeDeleteStatement_14<T, D>(
          this,
          Invocation.method(
            #delete,
            [table],
          ),
        ),
        returnValueForMissingStub: _FakeDeleteStatement_14<T, D>(
          this,
          Invocation.method(
            #delete,
            [table],
          ),
        ),
      ) as _i5.DeleteStatement<T, D>);
  @override
  _i7.Future<int> customUpdate(
    String? query, {
    List<_i5.Variable<Object>>? variables = const [],
    Set<_i5.TableInfo<_i5.Table, dynamic>>? updates,
    _i5.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customUpdate,
          [query],
          {
            #variables: variables,
            #updates: updates,
            #updateKind: updateKind,
          },
        ),
        returnValue: _i7.Future<int>.value(0),
        returnValueForMissingStub: _i7.Future<int>.value(0),
      ) as _i7.Future<int>);
  @override
  _i7.Future<int> customInsert(
    String? query, {
    List<_i5.Variable<Object>>? variables = const [],
    Set<_i5.TableInfo<_i5.Table, dynamic>>? updates,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customInsert,
          [query],
          {
            #variables: variables,
            #updates: updates,
          },
        ),
        returnValue: _i7.Future<int>.value(0),
        returnValueForMissingStub: _i7.Future<int>.value(0),
      ) as _i7.Future<int>);
  @override
  _i7.Future<List<_i5.QueryRow>> customWriteReturning(
    String? query, {
    List<_i5.Variable<Object>>? variables = const [],
    Set<_i5.TableInfo<_i5.Table, dynamic>>? updates,
    _i5.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customWriteReturning,
          [query],
          {
            #variables: variables,
            #updates: updates,
            #updateKind: updateKind,
          },
        ),
        returnValue: _i7.Future<List<_i5.QueryRow>>.value(<_i5.QueryRow>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i5.QueryRow>>.value(<_i5.QueryRow>[]),
      ) as _i7.Future<List<_i5.QueryRow>>);
  @override
  _i5.Selectable<_i5.QueryRow> customSelect(
    String? query, {
    List<_i5.Variable<Object>>? variables = const [],
    Set<_i5.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customSelect,
          [query],
          {
            #variables: variables,
            #readsFrom: readsFrom,
          },
        ),
        returnValue: _FakeSelectable_15<_i5.QueryRow>(
          this,
          Invocation.method(
            #customSelect,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSelectable_15<_i5.QueryRow>(
          this,
          Invocation.method(
            #customSelect,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
      ) as _i5.Selectable<_i5.QueryRow>);
  @override
  _i5.Selectable<_i5.QueryRow> customSelectQuery(
    String? query, {
    List<_i5.Variable<Object>>? variables = const [],
    Set<_i5.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customSelectQuery,
          [query],
          {
            #variables: variables,
            #readsFrom: readsFrom,
          },
        ),
        returnValue: _FakeSelectable_15<_i5.QueryRow>(
          this,
          Invocation.method(
            #customSelectQuery,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
        returnValueForMissingStub: _FakeSelectable_15<_i5.QueryRow>(
          this,
          Invocation.method(
            #customSelectQuery,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
      ) as _i5.Selectable<_i5.QueryRow>);
  @override
  _i7.Future<void> customStatement(
    String? statement, [
    List<dynamic>? args,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #customStatement,
          [
            statement,
            args,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  _i7.Future<T> transaction<T>(
    _i7.Future<T> Function()? action, {
    bool? requireNew = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #transaction,
          [action],
          {#requireNew: requireNew},
        ),
        returnValue: _i7.Future<T>.value(null),
        returnValueForMissingStub: _i7.Future<T>.value(null),
      ) as _i7.Future<T>);
  @override
  _i7.Future<void> batch(_i7.FutureOr<void> Function(_i5.Batch)? runInBatch) =>
      (super.noSuchMethod(
        Invocation.method(
          #batch,
          [runInBatch],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
  @override
  _i5.GenerationContext $write(
    _i5.Component? component, {
    bool? hasMultipleTables,
    int? startIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$write,
          [component],
          {
            #hasMultipleTables: hasMultipleTables,
            #startIndex: startIndex,
          },
        ),
        returnValue: _FakeGenerationContext_16(
          this,
          Invocation.method(
            #$write,
            [component],
            {
              #hasMultipleTables: hasMultipleTables,
              #startIndex: startIndex,
            },
          ),
        ),
        returnValueForMissingStub: _FakeGenerationContext_16(
          this,
          Invocation.method(
            #$write,
            [component],
            {
              #hasMultipleTables: hasMultipleTables,
              #startIndex: startIndex,
            },
          ),
        ),
      ) as _i5.GenerationContext);
  @override
  _i5.GenerationContext $writeInsertable(
    _i5.TableInfo<_i5.Table, dynamic>? table,
    _i5.Insertable<dynamic>? insertable, {
    int? startIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$writeInsertable,
          [
            table,
            insertable,
          ],
          {#startIndex: startIndex},
        ),
        returnValue: _FakeGenerationContext_16(
          this,
          Invocation.method(
            #$writeInsertable,
            [
              table,
              insertable,
            ],
            {#startIndex: startIndex},
          ),
        ),
        returnValueForMissingStub: _FakeGenerationContext_16(
          this,
          Invocation.method(
            #$writeInsertable,
            [
              table,
              insertable,
            ],
            {#startIndex: startIndex},
          ),
        ),
      ) as _i5.GenerationContext);
  @override
  String $expandVar(
    int? start,
    int? amount,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #$expandVar,
          [
            start,
            amount,
          ],
        ),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
}
