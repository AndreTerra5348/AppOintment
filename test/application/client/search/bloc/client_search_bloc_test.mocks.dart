// Mocks generated by Mockito 5.3.2 from annotations
// in appointment/test/application/client/search/bloc/client_search_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:appointment/infrastructure/drift/core/page_service.dart' as _i4;
import 'package:appointment/infrastructure/drift/core/select_filter.dart'
    as _i6;
import 'package:dartz/dartz.dart' as _i2;
import 'package:drift/drift.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DriftPageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDriftPageService<T_Entity, T_Table extends _i3.Table,
        T_Model extends _i3.DataClass> extends _i1.Mock
    implements _i4.DriftPageService<T_Entity, T_Table, T_Model> {
  @override
  _i5.Future<_i2.Either<_i4.PageServiceFailure, Iterable<T_Entity>>> getPage({
    required int? limit,
    required int? offset,
    _i6.SelectFilter<T_Table, T_Model>? filter,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPage,
          [],
          {
            #limit: limit,
            #offset: offset,
            #filter: filter,
          },
        ),
        returnValue: _i5.Future<
                _i2.Either<_i4.PageServiceFailure, Iterable<T_Entity>>>.value(
            _FakeEither_0<_i4.PageServiceFailure, Iterable<T_Entity>>(
          this,
          Invocation.method(
            #getPage,
            [],
            {
              #limit: limit,
              #offset: offset,
              #filter: filter,
            },
          ),
        )),
        returnValueForMissingStub: _i5.Future<
                _i2.Either<_i4.PageServiceFailure, Iterable<T_Entity>>>.value(
            _FakeEither_0<_i4.PageServiceFailure, Iterable<T_Entity>>(
          this,
          Invocation.method(
            #getPage,
            [],
            {
              #limit: limit,
              #offset: offset,
              #filter: filter,
            },
          ),
        )),
      ) as _i5.Future<_i2.Either<_i4.PageServiceFailure, Iterable<T_Entity>>>);
}
